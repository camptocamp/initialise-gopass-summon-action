#!/bin/bash -eu

stdbuf --output=0 --error=0 echo "::group::Install gopass"
set -x
sudo chmod o+w /usr/local/bin/
curl --show-error --silent --location \
    https://github.com/gopasspw/gopass/releases/download/v${GOPASS_VERSION}/gopass-${GOPASS_VERSION}-linux-amd64.tar.gz \
    -o - | tar xz gopass -O >/usr/local/bin/gopass
chmod +x /usr/local/bin/gopass
set +x
stdbuf --output=0 --error=0 echo "::endgroup::"
stdbuf --output=0 --error=0 echo "::group::Install summon"
set -x
curl --show-error --silent --location \
    https://github.com/cyberark/summon/releases/download/v${SUMMON_VERSION}/summon-linux-amd64.tar.gz \
    -o - | tar xz summon -O >/usr/local/bin/summon
chmod +x /usr/local/bin/summon
set +x
stdbuf --output=0 --error=0 echo "::endgroup::"
stdbuf --output=0 --error=0 echo "::group::Install private key"
set -x
if [ "${CI_GPG_PRIVATE_KEY}" ]; then
    echo "${CI_GPG_PRIVATE_KEY}" | gpg --import - || true
else
    gpg --quiet --batch --yes --decrypt --passphrase=${LARGE_SECRET_PASSPHRASE} --output CI.asc CI.asc.gpg
    gpg --import CI.asc
    rm --force CI.asc
fi
gpg --list-keys
set +x
stdbuf --output=0 --error=0 echo "::endgroup::"

stdbuf --output=0 --error=0 echo "::group::Init repository"
set -x

git config --global user.email || git config --global user.email "geospatial-bot@camptocamp.com"
git config --global user.name || git config --global user.name CI

GOPASS_DEBUG=true gopass init ${GPG_FINGERPRINT}
gopass clone https://${GITHUB_GOPASS_CI_TOKEN}@github.com/${GITHUB_REPOSITORY}.git gs/ci --sync gitcli

echo '#!/bin/bash' >/usr/local/bin/gopass-wrapper
echo 'gopass show $(echo "${@}"|tr : \ )' >>/usr/local/bin/gopass-wrapper
chmod +x /usr/local/bin/gopass-wrapper

export SUMMON_PROVIDER=/usr/local/bin/gopass-wrapper
echo "SUMMON_PROVIDER=${SUMMON_PROVIDER}" >>${GITHUB_ENV}

set +x
stdbuf --output=0 --error=0 echo "::endgroup::"

gopass list --flat | while read key; do
    pass=$(gopass ${key})
    for p in path; do
        echo "::add-mask::${p}"
    done
done

for pattern in ${PATTERNS}; do
    stdbuf --output=0 --error=0 echo "::group::Use pattern ${pattern}"
    set -x
    ls ~/.local/share/gopass/stores/gs-ci/patterns/${pattern}
    (
        cd ~/.local/share/gopass/stores/gs-ci/patterns/${pattern}
        ./apply
    )
    set +x
    stdbuf --output=0 --error=0 echo "::endgroup::"
done
